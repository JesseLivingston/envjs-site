{{ extend $.env( "templates" ) + "html/base.tmpl" }}
{{ block main }}
<div id='doc'>
    <h3>
        <a href='${ $.env( "root" ) + "docs" }'>
            &lt; documentation
        </a>
    </h3>
    <div class=' column span-4 colborder'>
	    <h4>options</h4>
        <ul>
        {{ each _(api).where("page", "options") }}
            <li><a href='${ "#"+this.name }'> ${ this.name } </a></li>
        {{ /each }}
        </ul> 
        <h4>hooks</h4>
        <ul>
        {{ each _(api).where("page", "hooks") }}
            <li><a href='${ "#"+this.name }'> ${ this.name } </a></li>
        {{ /each }}
        </ul> 
        <h4>platform</h4>
        <ul>
        {{ each _(api).where("page", "platform") }}
            <li><a href='${ "#"+this.name }'> ${ this.name } </a></li>
        {{ /each }}
        </ul> 
    </div>
    <div class='first column span-13'>
        <h2>
            <img src='${ $.env( "root" ) + ( "images/icon-green.png" ) }'
                 height='30px'/>
		    options
		</h2>
		<p>
		    Envjs provides a number of basic configurable options
			which allow users to modify the default behavior
			the code base.
		</p>
		<p>
		    Options, Hooks, and Platform functions are all set, or
			overridden via the same mechanism, using Envjs as a
			function whose argument as an object is used to
			effectively replace the default value.
		</p>
        <ul>
        {{ each _(api).where("page", "options") }}
            <li>
                <hr id='${ this.name }'/>
                <h3>${ this.name }</h3>
                {{ html this.description }}
            </li>
        {{ /each }}
        </ul>
		
		
        <h2>
            <img src='${ $.env( "root" ) + ( "images/icon-green.png" ) }'
                 height='30px'/>
            hooks
		</h2>
		<p>
		    Hooks allow users of Envjs to extend the usual behavior
			at well known points, or to subscribe to internal
			events that a browser would not normally expose.  
		</p>
		<p>
		    These are very useful, for example, to allow Envjs users 
			to run existing HTML files unmodified, while still being 
			able to provide additional information to the console,
			or to store state regarding the HTML applications
			processes. 
		</p>
		<ul>
        {{ each _(api).where("page", "hooks") }}
            <li>
                <hr id='${ this.name }'/>
                <h3>${ this.name }</h3>
                {{ html this.description }}
            </li>
        {{ /each }}
		</ul>
		
		
        <h2>
            <img src='${ $.env( "root" ) + ( "images/icon-green.png" ) }'
                 height='30px'/>
            platform
		</h2>
		<p>
		    Platform functions are required to be implemented by
			authors who wish to run Envjs on additional javascript
			engines.  Currenlty only rhino is supported though
			we hope to support additional engines in the future.
		</p>
		<p>
		    These functions are also available to the Envjs users
			as utilities, for example, to write out the resulting
			dom, after manipulation by javascript, to a local file. 
			Also the default implementations may be easily overridden
			to suit the users particular needs.
		</p>
        <ul>
        {{ each _(api).where("page", "platform") }}
            <li>
                <hr id='${ this.name }'/>
                <h3>${ this.name }</h3>
                {{ html this.description }}
            </li>
        {{ /each }}
        </ul> 
    </div>
    <div class='last column span-4'>
        <h4>
            <strong>API ${ this.id }</strong>
        </h4>
        <img src='${ $.env( "root" ) + "images/icon-green.png" }' 
             alt='API ${ this.id }'
             height='150px'/>
             
        <strong>releases</strong>
        <ul>
            {{ each versions }}
            <li>
                
                <a href='${ $.env( "root" ) + "doc/api/" + this.$id.replace("envjs-","") }'>
                    ${ this.name }
                </a> |
                <a href='${ $.env( "root" ) + "release/" + this.$id }'>
                    ${ this.$id }
                </a>
             </li>
            {{ /each }}
        </ul>
    </div>
</div>
{{ /block }}